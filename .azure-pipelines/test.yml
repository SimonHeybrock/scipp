trigger: none

stages:
  - stage: 'build_and_test'
    displayName: 'Build and Test'

    jobs:
      - job: 'linux'
        displayName: 'Linux'
        timeoutInMinutes: 90
        pool: 'Default'
        variables:
          ccache_dir: '$(Pipeline.Workspace)/ccache'
          build_dir: '$(Build.StagingDirectory)/build'
          install_dir: '$(Build.StagingDirectory)/install'
          docs_build_dir: '$(Build.StagingDirectory)/docs_build'
        steps:
          - checkout: self
            submodules: true
          - bash: |
              set -ex
              sudo apt-get install -y ccache
              echo "##vso[task.prependpath]/usr/lib/ccache"
              # Set cache dir
              ccache --set-config=cache_dir="$(ccache_dir)"
            displayName: 'Install and configure ccache'
          - task: Cache@2
            inputs:
              key: 'ccache | "$(Agent.OS)" | "$(Build.SourceVersion)"'
              restoreKeys: |
                ccache | "$(Agent.OS)" | "$(Build.SourceVersion)"
                ccache | "$(Agent.OS)"
              path: "$(CCACHE_DIR)"
            displayName: 'Process ccache'
          - bash: ccache --show-stats
            displayName: 'Report ccache statistics'
          - bash: echo "##vso[task.prependpath]$CONDA/bin"
            displayName: 'Add Conda to PATH'
          - bash: |
              set -ex
              conda --version
              conda env create -f scipp-developer.yml
              # TODO: source activate does not work (see https://github.com/conda/conda/issues/9566)
              echo "##vso[task.prependpath]$CONDA/envs/scipp-developer/bin"
              mkdir -p  "$(build_dir)" "$(install_dir)" "$(docs_build_dir)"
            displayName: 'Configure build environment'
          - bash: |
              set -ex
              cd "$(build_dir)"
              cmake \
                -G Ninja \
                -DPYTHON_EXECUTABLE=$(command -v python) \
                -DCMAKE_INSTALL_PREFIX="$(install_dir)" \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=OFF \
                -DDYNAMIC_LIB=ON \
                "$(Build.Repository.LocalPath)"
            displayName: 'CMake configuration'
          - bash: |
              set -ex
              cd "$(build_dir)"
              cmake --build . --target all-tests
            displayName: 'Build C++ unit tests'
          - bash: |
              set -ex
              cd "$(build_dir)"
              ./common/test/scipp-common-test
              ./units/test/scipp-units-test
              ./core/test/scipp-core-test
              ./variable/test/scipp-variable-test
              ./dataset/test/scipp-dataset-test
              ./neutron/test/scipp-neutron-test
            displayName: 'Run C++ unit tests'
          - bash: |
              set -ex
              cd "$(build_dir)"
              cmake --build . --target all-benchmarks
            displayName: 'Build benchmarks'
          - bash: |
              set -ex
              cd "$(build_dir)"
              cmake --build . --target install
            displayName: 'Build Python library'
          - bash: |
              set -ex
              PYTHONPATH="$PYTHONPATH:$(install_dir)" python -m pytest
            displayName: 'Run Python unit tests'
          - bash: ccache --show-stats
            displayName: 'Report ccache statistics'
